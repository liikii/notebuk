https://www.python.org/ftp/python/
https://www.python.org/ftp/python/3.6.2/Python-3.6.2.tar.xz


sudo apt install python3.6-dev
apt-get install python3.6-gdbm

sudo apt-get install python3.5-gdbm
./configure
sudo make 
sudo altinstall



apt install -y python3.5-dev
apt install -y python3.5-gdbm



The documentation lacks newcomer-friendly tutorial on how to install PyNaCl. Popular GNU/Linux distros do not have all necessary dependencies and they're not listed or downloaded by pip.

So, I wrote these instructions that work on fresh installation of Ubuntu 16.10. If you have e.g. removed packages or run a different (version of the) distro, you might need more or less dependencies.

I'm too busy to write a pull request so I'm putting this under issues where it is hopefully useful to other people, and to ask something like this to be added by the developers.

Python 3.6 installation instructions can be found here

To install from pip:
Python 2.7:

sudo apt install python-pip libffi-dev
pip install pynacl
Python 3.5:

sudo apt install python3-pip libffi-dev
pip3 install pynacl
Python 3.6:

sudo apt install python3-pip libffi-dev python3-setuptools python3.6-dev
python3.6 -m pip install pynacl
To install from source:
Install dependencies

sudo apt install libffi-dev python-setuptools python-dev #Python 2.7
sudo apt install libffi-dev python3-setuptools python3-dev #Python 3.5
sudo apt install libffi-dev python3-setuptools python3.6-dev #Python 3.6
Download source

wget https://github.com/pyca/pynacl/archive/master.zip
If you want, move master.zip to desired location and navigate to it in terminal.

Navigate to setup file

unzip master.zip
cd pynacl-master/
Run the setup as root

sudo python setup.py install #Python 2.7
sudo python3 setup.py install #Python 3.5
sudo python3.6 setup.py install #Python 3.6
The installer throws error with each version of python when run without sudo so if it's not the intention, please let me know what's missing.

Note
If you after installation change the directory of pynacl-master/ and try e.g.

import nacl.secret
at least 2.7 and 3.6 throw something like

ImportError: No module named _cffi_backend
To fix this, you must edit the file related to your version as root and alter the directories for the cffi and pycparser egg-files:

sudo gedit /usr/local/lib/python2.7/dist-packages/easy-install.pth
sudo gedit /usr/local/lib/python3.5/dist-packages/easy-install.pth
sudo gedit /usr/local/lib/python3.6/dist-packages/easy-install.pth
EDIT: Added pip instructions for python3.6

-----------------------------------------------------------------------------------
The current syntax for function decorators as implemented in Python 2.4a2 is:

@dec2
@dec1
def func(arg1, arg2, ...):
    pass
This is equivalent to:

def func(arg1, arg2, ...):
    pass
func = dec2(dec1(func))
-----------------------------------------------------------------------------------

python list是个动态数组     这个数组每个元素是个*ob_item是个指向pythonobject的指针



multiply A backreference 
((?<=varchar\(127\))|(?<=varchar\(45\))|(?<=varchar\(255\))|(?<=varchar\(2048\))) DEFAULT ''



-----------------------------------------------------------------------------------


Modes
The mode of an image defines the type and depth of a pixel in the image. Each pixel uses the full range of the bit depth. So a 1-bit pixel has a range of 0-1, an 8-bit pixel has a range of 0-255 and so on. The current release supports the following standard modes:

1 (1-bit pixels, black and white, stored with one pixel per byte)

L (8-bit pixels, black and white)

P (8-bit pixels, mapped to any other mode using a color palette)

RGB (3x8-bit pixels, true color)

RGBA (4x8-bit pixels, true color with transparency mask)

CMYK (4x8-bit pixels, color separation)

YCbCr (3x8-bit pixels, color video format)

Note that this refers to the JPEG, and not the ITU-R BT.2020, standard

LAB (3x8-bit pixels, the L*a*b color space)

HSV (3x8-bit pixels, Hue, Saturation, Value color space)

I (32-bit signed integer pixels)

F (32-bit floating point pixels)

