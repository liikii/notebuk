
go build
env GOOS=windows GOARCH=amd64 go build
env GOOS=windows GOARCH=amd64 go build github.com/mholt/caddy/caddy

env GOOS=linux GOARCH=amd64 go build -o haha hulu.go
env GOOS=windows GOARCH=amd64 go build -o hulu.exe hulu.go
go build -o hulu4mac hulu.go

GOOS - Target Operating System  GOARCH - Target Platform
android arm
darwin  386
darwin  amd64
darwin  arm
darwin  arm64
dragonfly   amd64
freebsd 386
freebsd amd64
freebsd arm
linux   386
linux   amd64
linux   arm
linux   arm64
linux   ppc64
linux   ppc64le
linux   mips
linux   mipsle
linux   mips64
linux   mips64le
netbsd  386
netbsd  amd64
netbsd  arm
openbsd 386
openbsd amd64
openbsd arm
plan9   386
plan9   amd64
solaris amd64
windows 386
windows amd64


https://www.digitalocean.com/community/tutorials/how-to-build-go-executables-for-multiple-platforms-on-ubuntu-16-04

go get golang.org/x/tour/gotour
package golang.org/x/tour/gotour: unrecognized import path "golang.org/x/tour/gotour" (https fetch: Get https://golang.org/x/tour/gotour?go-get=1: dial tcp 216.239.37.1:443: i/o timeout)
go tool tour



implicit assignment :=


Short variable declarations
Inside a function, the := short assignment statement can be used in place of a var declaration with implicit type.

Outside a function, every statement begins with a keyword (var, func, and so on) and so the := construct is not available.


The int, uint, and uintptr types are usually 32 bits wide on 32-bit systems and 64 bits wide on 64-bit systems. When you need an integer value you should use int unless you have a specific reason to use a sized or unsigned integer type.


The Little Go Book
An Introduction to Programming in Go
Go Bootcamp
Learning Go
Go for Javascript Developers
Go in Action
Go Programming Blueprints - 2nd Ed.
Programming in Go: Creating Applications for the 21st Century
The Go Programming Language
Introducing Go: Build Reliable, Scalable Programs
Get Programming with Go
Go Programming by Example
Go Recipes
Learning Go programming
Test-driven development with Go 
Network Programming with Go
Mastering Concurrency in Go
Go in Practice
A Go Developer's Notebook
The Go Programming Language Phrasebook
Go Design Patterns
Go Reactive Programming
Building Web Apps with Go
Build Web Application with Golang
Mastering Go Web Services 
Level Up Your Web Apps With Go
Go Web Programming
Webapps in Go the anti textbook
Cloud Native Go: Building Web Applications and Microservices for the Cloud with Go and React
Web Development with Go: Learn to Create Real World Web Applications using Go
Go: Building Web Applications
A tour of Go
Video: Learn Go Syntax in one video
Tutorials: Go by Example
Go Fundamentals Video Training
More Books on the Go Wiki


type assertion::
 The notation x.(T) is called a type assertion.


## Â type assertion
dimg, ok := img.(draw.Image)
    if !ok {
        return nil, fmt.Errorf("%T is not a drawable image type", img)
    }

    

go get -u -v github.com/ianthehat/godef
go get -u -v github.com/stamblerre/gocode

# and in $GOPATH/bin use the first folder of the gopath, if there are several.....
cp godef godef-gomod
cp gocode gocode-gomod




go visual studio code:
https://codeload.github.com/mdempsky/gocode/zip/master
https://codeload.github.com/golang/lint/zip/master
https://codeload.github.com/sqs/goreturns/zip/master
https://codeload.github.com/ianthehat/godef/zip/master
git clone https://github.com/golang/tools.git --config "http.proxy=socks:
https://codeload.github.com/newhook/go-symbols/zip/master
https://codeload.github.com/lukehoban/go-outline/zip/master

10719  cp godef godef-gomod
10720  cp gocode gocode-gomod



Install the Go tools
If you are upgrading from an older version of Go you must first remove the existing version.

Linux, macOS, and FreeBSD tarballs
Download the archive and extract it into /usr/local, creating a Go tree in /usr/local/go. For example:

tar -C /usr/local -xzf go$VERSION.$OS-$ARCH.tar.gz
Choose the archive file appropriate for your installation. For instance, if you are installing Go version 1.2.1 for 64-bit x86 on Linux, the archive you want is called go1.2.1.linux-amd64.tar.gz.

(Typically these commands must be run as root or through sudo.)

Add /usr/local/go/bin to the PATH environment variable. You can do this by adding this line to your /etc/profile (for a system-wide installation) or $HOME/.profile:

export PATH=$PATH:/usr/local/go/bin
Note: changes made to a profile file may not apply until the next time you log into your computer. To apply the changes immediately, just run the shell commands directly or execute them from the profile using a command such as source $HOME/.profile.



